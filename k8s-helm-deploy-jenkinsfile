pipeline {
    agent any
    parameters{
        string(name: 'ENV', defaultValue: '', description:'which Environment?')
        string(name: 'APP_VERSION', defaultValue: '', description:'which version of APP?')
        string(name: 'COMPONENT', defaultValue: '', description:'which APP COMPONENT?')
    }
  
    options {
        ansiColor('xterm')
     }

    stages {
        stage('Labeling Build') {
            steps {
                
                script{
                    addShortText background:'yellow', color:'black',borderColor:'yellow', text:"ENV=${ENV}"
                    addShortText background:'yellow', color:'black',borderColor:'yellow', text:"APP_VERSION=${APP_VERSION}"
                    addShortText background:'yellow', color:'black',borderColor:'yellow', text:"COMPONENT=${COMPONENT}"
                }
            }
        }

       stage('check Artifact') {
            steps {
                sh '''
                aws ecr list-images --repository-name ${COMPONENT}| jq ".imageIds[].imageTag" | grep ${APP_VERSION} 
                '''
            }
       } 
     
    stage('App Deploy') {
        steps {
            dir('app') {  
                git branch:'main', url: "https://github.com/MunishLagoo/k8s-${COMPONENT}.git"
            }
            dir('helm') {
               git branch:'main', url: "https://github.com/MunishLagoo/k8s-kubernetes.git"
            }
            dir('helm') {
                sh '''
                   kubectl create ns ${ENV} || true
                   helm upgrade -i ${COMPONENT} k8s-helm-roboshop -f ../app/helm/${ENV}-values.yaml --set image.tag=${APP_VERSION} --wait --timeout 5m -n ${ENV}
                '''
                                 
        }
    }
    }
   //stages     
    }
//pipeline    
}